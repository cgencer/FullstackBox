	location ~ ^/sites/.*/private/ 		{deny all;}		# Drupal: deny private files
	location ~ ^/sites/[^/]+/files/.*\.php$ {deny all;}		# Drupal: deny php in files
	location ~ /vendor/.*\.php$ 		{deny all;}		# Drupal: deny php in vendor

	# Drupal: handle private files
	location ~ ^(/[a-z\-]+)?/system/files/ {
		try_files $uri /index.php?$query_string;
	}

	# Trying to access private files directly returns a 404.
	location ^~ /sites/default/files/private/ {
		internal;
	}

	# All static files will be served directly.
	location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff2?|svg)$ {
		access_log off;
		expires 30d;
		## No need to bleed constant updates. Send the all shebang in one fell swoop.
		tcp_nodelay off;
		## Set the OS file cache.
		open_file_cache max=3000 inactive=120s;
		open_file_cache_valid 45s;
		open_file_cache_min_uses 2;
		open_file_cache_errors off;
	}

	# PDFs and powerpoint files handling.
	location ~* ^.+\.(?:pdf|pptx?)$ {
		expires 30d;
		## No need to bleed constant updates. Send the all shebang in one fell swoop.
		tcp_nodelay off;
	}

	# MP3 and Ogg/Vorbis files are served using AIO when supported. Your OS must support it.
	location ^~ /sites/default/files/audio/mp3 {
	location ~* ^/sites/default/files/audio/mp3/.*\.mp3$ {
		directio 4k; # for XFS
		## If you're using ext3 or similar uncomment the line below and comment the above.
		#directio 512; # for ext3 or similar (block alignments)
		tcp_nopush off;
		aio on;
		output_buffers 1 2M;
	}
	}

	location ^~ /sites/default/files/audio/ogg {
	location ~* ^/sites/default/files/audio/ogg/.*\.ogg$ {
		directio 4k; # for XFS
		## If you're using ext3 or similar uncomment the line below and comment the above.
		#directio 512; # for ext3 or similar (block alignments)
		tcp_nopush off;
		aio on;
		output_buffers 1 2M;
	}
	}

	# Pseudo streaming of FLV files:
	## http://wiki.nginx.org/HttpFlvStreamModule.
	## If pseudo streaming isn't working, try to comment
	## out in nginx.conf line with:
	## add_header X-Frame-Options SAMEORIGIN;
	location ^~ /sites/default/files/video/flv {
	location ~* ^/sites/default/files/video/flv/.*\.flv$ {
		flv;
	}
	}

	# Pseudo streaming of H264/AAC files. This requires an Nginx
	## version greater or equal to 1.0.7 for the stable branch and
	## greater or equal to 1.1.3 for the development branch.
	## Cf. http://nginx.org/en/docs/http/ngx_http_mp4_module.html.
	location ^~ /sites/default/files/video/mp4 { # videos
	location ~* ^/sites/default/files/video/mp4/.*\.(?:mp4|mov)$ {
		mp4;
		mp4_buffer_size 1M;
		mp4_max_buffer_size 5M;
	}
	}

	location ^~ /sites/default/files/audio/m4a { # audios
	location ~* ^/sites/default/files/audio/m4a/.*\.m4a$ {
		mp4;
		mp4_buffer_size 1M;
		mp4_max_buffer_size 5M;
	}
	}

	# Advanced Help module makes each module provided README available.
	location ^~ /help/ {
	location ~* ^/help/[^/]*/README\.txt$ {
		## Include the specific FastCGI configuration. This is for a
		## FCGI backend like php-cgi or php-fpm.
                include                 global/php_fastcgi.conf;
	}
	}

	# Replicate the Apache <FilesMatch> directive of Drupal standard
	## .htaccess. Disable access to any code files. Return a 404 to curtail
	## information disclosure. Hide also the text files.
	# location ~* ^(?:.+\.(?:htaccess|make|txt|engine|inc|info|install|module|profile|po|pot|sh|.*sql|test|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/$ {
		# return 404;
	# }

	location @drupal-no-args {
		## Include the specific FastCGI configuration. This is for a FCGI backend like php-cgi or php-fpm.
			# include apps/drupal/fastcgi_no_args_drupal.conf;
                include                 global/php_fastcgi.conf;

		## FastCGI microcache.
			# include apps/drupal/microcache_fcgi.conf;
		## FCGI microcache for authenticated users also.
			#include apps/drupal/microcache_fcgi_auth.conf;

		## Proxy microcache.
			#include apps/drupal/microcache_proxy.conf;
		## Proxy microcache for authenticated users also.
			#include apps/drupal/microcache_proxy_auth.conf;
	}

	# Disallow access to .bzr, .git, .hg, .svn, .cvs directories: return 404 as not to disclose information.
	location ^~ /.bzr 	{return 404;}
	location ^~ /.git 	{return 404;}
	location ^~ /.hg 	{return 404;}
	location ^~ /.svn 	{return 404;}
	location ^~ /.cvs 	{return 404;}

	location ^~ /patches 	{return 404;}		# Disallow access to patches directory.
	location ^~ /backup 	{return 404;}		# Disallow access to drush backup directory.

	# Disable access logs for robots.txt.
	location = /robots.txt {
		access_log off;
		try_files $uri @drupal-no-args;
	}

	location = /rss.xml 	{try_files $uri @drupal-no-args;}	# RSS feed support.
	location = /sitemap.xml {try_files $uri @drupal-no-args;}	# XML Sitemap support.


	# Support for favicon. Return an 1x1 transparent GIF if it doesn't exist.
	location = /favicon.ico {
		expires 	30d;
		# try_files 	/favicon.ico @empty;
		log_not_found 	off;
		access_log 	off;
	}

	# module update error as on: https://github.com/kalabox/kalabox/issues/1767
	rewrite ^/core/authorize.php/core/authorize.php(.*)$ /core/authorize.php$1;

	location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
		try_files $uri @rewrite;
		expires max;
		log_not_found off;
	}

	# Fighting with Styles? This little gem is amazing.
    	# location ~ ^/sites/.*/files/imagecache/ { 		# For Drupal <= 6
    	location ~ ^/sites/.*/files/styles/ { 			# For Drupal >= 7
        	try_files $uri @rewrite;
    	}

	location ^~ /sites/default/files/ {
		rewrite ^/styles/frontpage_slider/public(.*)$ $1 permanent;
	}

	location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        	try_files $uri @rewrite;
        	expires max;
        	log_not_found off;
    	}

	location ~ ^(/[a-z\-]+)?/sites/.*/files/styles/ { 
        	try_files $uri @rewrite;
	}